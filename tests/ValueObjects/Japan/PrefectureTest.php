<?php


namespace Aijoh\Core\Tests\ValueObjects\Japan;


use Aijoh\Core\ValueObjects\Japan\JapanPrefecture;


test("都道府県一覧", function( string $name, int $code ) {
    $prefecture = JapanPrefecture::from($name);
    $this->assertEquals($name, $prefecture->value);
    $this->assertEquals($code, $prefecture->code());
})->with(
    [
        '北海道'   => [ '北海道', 1 ],
        '青森県'   => [ '青森県', 2 ],
        '岩手県'   => [ '岩手県', 3 ],
        '宮城県'   => [ '宮城県', 4 ],
        '秋田県'   => [ '秋田県', 5 ],
        '山形県'   => [ '山形県', 6 ],
        '福島県'   => [ '福島県', 7 ],
        '茨城県'   => [ '茨城県', 8 ],
        '栃木県'   => [ '栃木県', 9 ],
        '群馬県'   => [ '群馬県', 10 ],
        '埼玉県'   => [ '埼玉県', 11 ],
        '千葉県'   => [ '千葉県', 12 ],
        '東京都'   => [ '東京都', 13 ],
        '神奈川県' => [ '神奈川県', 14 ],
        '新潟県'   => [ '新潟県', 15 ],
        '富山県'   => [ '富山県', 16 ],
        '石川県'   => [ '石川県', 17 ],
        '福井県'   => [ '福井県', 18 ],
        '山梨県'   => [ '山梨県', 19 ],
        '長野県'   => [ '長野県', 20 ],
        '岐阜県'   => [ '岐阜県', 21 ],
        '静岡県'   => [ '静岡県', 22 ],
        '愛知県'   => [ '愛知県', 23 ],
        '三重県'   => [ '三重県', 24 ],
        '滋賀県'   => [ '滋賀県', 25 ],
        '京都府'   => [ '京都府', 26 ],
        '大阪府'   => [ '大阪府', 27 ],
        '兵庫県'   => [ '兵庫県', 28 ],
        '奈良県'   => [ '奈良県', 29 ],
        '和歌山県' => [ '和歌山県', 30 ],
        '鳥取県'   => [ '鳥取県', 31 ],
        '島根県'   => [ '島根県', 32 ],
        '岡山県'   => [ '岡山県', 33 ],
        '広島県'   => [ '広島県', 34 ],
        '山口県'   => [ '山口県', 35 ],
        '徳島県'   => [ '徳島県', 36 ],
        '香川県'   => [ '香川県', 37 ],
        '愛媛県'   => [ '愛媛県', 38 ],
        '高知県'   => [ '高知県', 39 ],
        '福岡県'   => [ '福岡県', 40 ],
        '佐賀県'   => [ '佐賀県', 41 ],
        '長崎県'   => [ '長崎県', 42 ],
        '熊本県'   => [ '熊本県', 43 ],
        '大分県'   => [ '大分県', 44 ],
        '宮崎県'   => [ '宮崎県', 45 ],
        '鹿児島県' => [ '鹿児島県', 46 ],
        '沖縄県'   => [ '沖縄県', 47 ],

    ]


);


test('都道府県(県無し)', function( $name, $expected, $code ) {
    $prefecture = JapanPrefecture::makeFromJapanese($name);
    $this->assertEquals($expected, $prefecture->value);
    $this->assertEquals($code, $prefecture->code());
})->with(
    [
        '北海道 省略'   => [ '北海', '北海道', 1 ],
        '青森県 省略'   => [ '青森', '青森県', 2 ],
        '岩手県 省略'   => [ '岩手', '岩手県', 3 ],
        '宮城県 省略'   => [ '宮城', '宮城県', 4 ],
        '秋田県 省略'   => [ '秋田', '秋田県', 5 ],
        '山形県 省略'   => [ '山形', '山形県', 6 ],
        '福島県 省略'   => [ '福島', '福島県', 7 ],
        '茨城県 省略'   => [ '茨城', '茨城県', 8 ],
        '栃木県 省略'   => [ '栃木', '栃木県', 9 ],
        '群馬県 省略'   => [ '群馬', '群馬県', 10 ],
        '埼玉県 省略'   => [ '埼玉', '埼玉県', 11 ],
        '千葉県 省略'   => [ '千葉', '千葉県', 12 ],
        '東京都 省略'   => [ '東京', '東京都', 13 ],
        '神奈川県 省略' => [ '神奈川', '神奈川県', 14 ],
        '新潟県 省略'   => [ '新潟', '新潟県', 15 ],
        '富山県 省略'   => [ '富山', '富山県', 16 ],
        '石川県 省略'   => [ '石川', '石川県', 17 ],
        '福井県 省略'   => [ '福井', '福井県', 18 ],
        '山梨県 省略'   => [ '山梨', '山梨県', 19 ],
        '長野県 省略'   => [ '長野', '長野県', 20 ],
        '岐阜県 省略'   => [ '岐阜', '岐阜県', 21 ],
        '静岡県 省略'   => [ '静岡', '静岡県', 22 ],
        '愛知県 省略'   => [ '愛知', '愛知県', 23 ],
        '三重県 省略'   => [ '三重', '三重県', 24 ],
        '滋賀県 省略'   => [ '滋賀', '滋賀県', 25 ],
        '京都府 省略'   => [ '京都', '京都府', 26 ],
        '大阪府 省略'   => [ '大阪', '大阪府', 27 ],
        '兵庫県 省略'   => [ '兵庫', '兵庫県', 28 ],
        '奈良県 省略'   => [ '奈良', '奈良県', 29 ],
        '和歌山県 省略' => [ '和歌山', '和歌山県', 30 ],
        '鳥取県 省略'   => [ '鳥取', '鳥取県', 31 ],
        '島根県 省略'   => [ '島根', '島根県', 32 ],
        '岡山県 省略'   => [ '岡山', '岡山県', 33 ],
        '広島県 省略'   => [ '広島', '広島県', 34 ],
        '山口県 省略'   => [ '山口', '山口県', 35 ],
        '徳島県 省略'   => [ '徳島', '徳島県', 36 ],
        '香川県 省略'   => [ '香川', '香川県', 37 ],
        '愛媛県 省略'   => [ '愛媛', '愛媛県', 38 ],
        '高知県 省略'   => [ '高知', '高知県', 39 ],
        '福岡県 省略'   => [ '福岡', '福岡県', 40 ],
        '佐賀県 省略'   => [ '佐賀', '佐賀県', 41 ],
        '長崎県 省略'   => [ '長崎', '長崎県', 42 ],
        '熊本県 省略'   => [ '熊本', '熊本県', 43 ],
        '大分県 省略'   => [ '大分', '大分県', 44 ],
        '宮崎県 省略'   => [ '宮崎', '宮崎県', 45 ],
        '鹿児島県 省略' => [ '鹿児島', '鹿児島県', 46 ],
        '沖縄県 省略'   => [ '沖縄', '沖縄県', 47 ],
    ]
);

test('英語', function( $name, $expected, $code ) {
    $prefecture = JapanPrefecture::makeFromEnglish($name);
    $this->assertEquals($expected, $prefecture->value);
    $this->assertEquals($code, $prefecture->code());
})->with(
    [
        'HOKKAIDO'  => [ 'Hokkaido', '北海道', 1 ],
        'AOMORI'    => [ 'Aomori', '青森県', 2 ],
        'IWATE'     => [ 'Iwate', '岩手県', 3 ],
        'MIYAGI'    => [ 'Miyagi', '宮城県', 4 ],
        'AKITA'     => [ 'Akita', '秋田県', 5 ],
        'YAMAGATA'  => [ 'Yamagata', '山形県', 6 ],
        'FUKUSHIMA' => [ 'Fukushima', '福島県', 7 ],
        'IBARAKI'   => [ 'Ibaraki', '茨城県', 8 ],
        'TOCHIGI'   => [ 'Tochigi', '栃木県', 9 ],
        'GUNMA'     => [ 'Gunma', '群馬県', 10 ],
        'SAITAMA'   => [ 'Saitama', '埼玉県', 11 ],
        'CHIBA'     => [ 'Chiba', '千葉県', 12 ],
        'TOKYO'     => [ 'Tokyo', '東京都', 13 ],
        'KANAGAWA'  => [ 'Kanagawa', '神奈川県', 14 ],
        'NIIGATA'   => [ 'Niigata', '新潟県', 15 ],
        'TOYAMA'    => [ 'Toyama', '富山県', 16 ],
        'ISHIKAWA'  => [ 'Ishikawa', '石川県', 17 ],
        'FUKUI'     => [ 'Fukui', '福井県', 18 ],
        'YAMANASHI' => [ 'Yamanashi', '山梨県', 19 ],
        'NAGANO'    => [ 'Nagano', '長野県', 20 ],
        'GIFU'      => [ 'Gifu', '岐阜県', 21 ],
        'SHIZUOKA'  => [ 'Shizuoka', '静岡県', 22 ],
        'AICHI'     => [ 'Aichi', '愛知県', 23 ],
        'MIE'       => [ 'Mie', '三重県', 24 ],
        'SHIGA'     => [ 'Shiga', '滋賀県', 25 ],
        'KYOTO'     => [ 'Kyoto', '京都府', 26 ],
        'OSAKA'     => [ 'Osaka', '大阪府', 27 ],
        'HYOGO'     => [ 'Hyogo', '兵庫県', 28 ],
        'NARA'      => [ 'Nara', '奈良県', 29 ],
        'WAKAYAMA'  => [ 'Wakayama', '和歌山県', 30 ],
        'TOTTORI'   => [ 'Tottori', '鳥取県', 31 ],
        'SHIMANE'   => [ 'Shimane', '島根県', 32 ],
        'OKAYAMA'   => [ 'Okayama', '岡山県', 33 ],
        'HIROSHIMA' => [ 'Hiroshima', '広島県', 34 ],
        'YAMAGUCHI' => [ 'Yamaguchi', '山口県', 35 ],
        'TOKUSHIMA' => [ 'Tokushima', '徳島県', 36 ],
        'KAGAWA'    => [ 'Kagawa', '香川県', 37 ],
        'EHIME'     => [ 'Ehime', '愛媛県', 38 ],
        'KOCHI'     => [ 'Kochi', '高知県', 39 ],
        'FUKUOKA'   => [ 'Fukuoka', '福岡県', 40 ],
        'SAGA'      => [ 'Saga', '佐賀県', 41 ],
        'NAGASAKI'  => [ 'Nagasaki', '長崎県', 42 ],
        'KUMAMOTO'  => [ 'Kumamoto', '熊本県', 43 ],
        'OITA'      => [ 'Oita', '大分県', 44 ],
        'MIYAZAKI'  => [ 'Miyazaki', '宮崎県', 45 ],
        'KAGOSHIMA' => [ 'Kagoshima', '鹿児島県', 46 ],
        'OKINAWA'   => [ 'Okinawa', '沖縄県', 47 ],
    ]
);

test('コードからインスタンスを作成', function( string|int $code, string $name, int $ans ) {
    $prefecture = JapanPrefecture::makeFromCode($code);
    $this->assertEquals($name, $prefecture->value);
    $this->assertEquals($ans, $prefecture->code());
})->with(
    [
        '北海道 コード'   => [ '01', '北海道', 1 ],
        '青森県 コード'   => [ '02', '青森県', 2 ],
        '岩手県 コード'   => [ '03', '岩手県', 3 ],
        '宮城県 コード'   => [ '04', '宮城県', 4 ],
        '秋田県 コード'   => [ '05', '秋田県', 5 ],
        '山形県 コード'   => [ '06', '山形県', 6 ],
        '福島県 コード'   => [ '07', '福島県', 7 ],
        '茨城県 コード'   => [ '08', '茨城県', 8 ],
        '栃木県 コード'   => [ '09', '栃木県', 9 ],
        '群馬県 コード'   => [ '10', '群馬県', 10 ],
        '埼玉県 コード'   => [ '11', '埼玉県', 11 ],
        '千葉県 コード'   => [ '12', '千葉県', 12 ],
        '東京都 コード'   => [ '13', '東京都', 13 ],
        '神奈川県 コード' => [ '14', '神奈川県', 14 ],
        '新潟県 コード'   => [ '15', '新潟県', 15 ],
        '富山県 コード'   => [ '16', '富山県', 16 ],
        '石川県 コード'   => [ '17', '石川県', 17 ],
        '福井県 コード'   => [ '18', '福井県', 18 ],
        '山梨県 コード'   => [ '19', '山梨県', 19 ],
        '長野県 コード'   => [ '20', '長野県', 20 ],
        '岐阜県 コード'   => [ '21', '岐阜県', 21 ],
        '静岡県 コード'   => [ '22', '静岡県', 22 ],
        '愛知県 コード'   => [ '23', '愛知県', 23 ],
        '三重県 コード'   => [ '24', '三重県', 24 ],
        '滋賀県 コード'   => [ '25', '滋賀県', 25 ],
        '京都府 コード'   => [ '26', '京都府', 26 ],
        '大阪府 コード'   => [ '27', '大阪府', 27 ],
        '兵庫県 コード'   => [ '28', '兵庫県', 28 ],
        '奈良県 コード'   => [ '29', '奈良県', 29 ],
        '和歌山県 コード' => [ '30', '和歌山県', 30 ],
        '鳥取県 コード'   => [ '31', '鳥取県', 31 ],
        '島根県 コード'   => [ '32', '島根県', 32 ],
        '岡山県 コード'   => [ '33', '岡山県', 33 ],
        '広島県 コード'   => [ '34', '広島県', 34 ],
        '山口県 コード'   => [ '35', '山口県', 35 ],
        '徳島県 コード'   => [ '36', '徳島県', 36 ],
        '香川県 コード'   => [ '37', '香川県', 37 ],
        '愛媛県 コード'   => [ '38', '愛媛県', 38 ],
        '高知県 コード'   => [ '39', '高知県', 39 ],
        '福岡県 コード'   => [ '40', '福岡県', 40 ],
        '佐賀県 コード'   => [ '41', '佐賀県', 41 ],
        '長崎県 コード'   => [ '42', '長崎県', 42 ],
        '熊本県 コード'   => [ '43', '熊本県', 43 ],
        '大分県 コード'   => [ '44', '大分県', 44 ],
        '宮崎県 コード'   => [ '45', '宮崎県', 45 ],
        '鹿児島県 コード' => [ '46', '鹿児島県', 46 ],
        '沖縄県 コード'   => [ '47', '沖縄県', 47 ],
    ]
);

test('ひらがな生成てすと', function( $kana, $name, $resultKana, $code ) {
    $prefecture = JapanPrefecture::makeFromKana($kana);
    $this->assertEquals($name, $prefecture->value);
    $this->assertEquals($resultKana, $prefecture->katakana());
    $this->assertEquals($code, $prefecture->code());
})->with(
    [
        '北海道かな'   => [ 'ほっかいどう', '北海道', 'ホッカイドウ', 1 ],
        '青森県かな'   => [ 'あおもりけん', '青森県', 'アオモリケン', 2 ],
        '岩手県かな'   => [ 'いわてけん', '岩手県', 'イワテケン', 3 ],
        '宮城県かな'   => [ 'みやぎけん', '宮城県', 'ミヤギケン', 4 ],
        '秋田県かな'   => [ 'あきたけん', '秋田県', 'アキタケン', 5 ],
        '山形県かな'   => [ 'やまがたけん', '山形県', 'ヤマガタケン', 6 ],
        '福島県かな'   => [ 'ふくしまけん', '福島県', 'フクシマケン', 7 ],
        '茨城県かな'   => [ 'いばらきけん', '茨城県', 'イバラキケン', 8 ],
        '栃木県かな'   => [ 'とちぎけん', '栃木県', 'トチギケン', 9 ],
        '群馬県かな'   => [ 'ぐんまけん', '群馬県', 'グンマケン', 10 ],
        '埼玉県かな'   => [ 'さいたまけん', '埼玉県', 'サイタマケン', 11 ],
        '千葉県かな'   => [ 'ちばけん', '千葉県', 'チバケン', 12 ],
        '東京都かな'   => [ 'とうきょうと', '東京都', 'トウキョウト', 13 ],
        '神奈川県かな' => [ 'かながわけん', '神奈川県', 'カナガワケン', 14 ],
        '新潟県かな'   => [ 'にいがたけん', '新潟県', 'ニイガタケン', 15 ],
        '富山県かな'   => [ 'とやまけん', '富山県', 'トヤマケン', 16 ],
        '石川県かな'   => [ 'いしかわけん', '石川県', 'イシカワケン', 17 ],
        '福井県かな'   => [ 'ふくいけん', '福井県', 'フクイケン', 18 ],
        '山梨県かな'   => [ 'やまなしけん', '山梨県', 'ヤマナシケン', 19 ],
        '長野県かな'   => [ 'ながのけん', '長野県', 'ナガノケン', 20 ],
        '岐阜県かな'   => [ 'ぎふけん', '岐阜県', 'ギフケン', 21 ],
        '静岡県かな'   => [ 'しずおかけん', '静岡県', 'シズオカケン', 22 ],
        '愛知県かな'   => [ 'あいちけん', '愛知県', 'アイチケン', 23 ],
        '三重県かな'   => [ 'みえけん', '三重県', 'ミエケン', 24 ],
        '滋賀県かな'   => [ 'しがけん', '滋賀県', 'シガケン', 25 ],
        '京都府かな'   => [ 'きょうとふ', '京都府', 'キョウトフ', 26 ],
        '大阪府かな'   => [ 'おおさかふ', '大阪府', 'オオサカフ', 27 ],
        '兵庫県かな'   => [ 'ひょうごけん', '兵庫県', 'ヒョウゴケン', 28 ],
        '奈良県かな'   => [ 'ならけん', '奈良県', 'ナラケン', 29 ],
        '和歌山県かな' => [ 'わかやまけん', '和歌山県', 'ワカヤマケン', 30 ],
        '鳥取県かな'   => [ 'とっとりけん', '鳥取県', 'トットリケン', 31 ],
        '島根県かな'   => [ 'しまねけん', '島根県', 'シマネケン', 32 ],
        '岡山県かな'   => [ 'おかやまけん', '岡山県', 'オカヤマケン', 33 ],
        '広島県かな'   => [ 'ひろしまけん', '広島県', 'ヒロシマケン', 34 ],
        '山口県かな'   => [ 'やまぐちけん', '山口県', 'ヤマグチケン', 35 ],
        '徳島県かな'   => [ 'とくしまけん', '徳島県', 'トクシマケン', 36 ],
        '香川県かな'   => [ 'かがわけん', '香川県', 'カガワケン', 37 ],
        '愛媛県かな'   => [ 'えひめけん', '愛媛県', 'エヒメケン', 38 ],
        '高知県かな'   => [ 'こうちけん', '高知県', 'コウチケン', 39 ],
        '福岡県かな'   => [ 'ふくおかけん', '福岡県', 'フクオカケン', 40 ],
        '佐賀県かな'   => [ 'さがけん', '佐賀県', 'サガケン', 41 ],
        '長崎県かな'   => [ 'ながさきけん', '長崎県', 'ナガサキケン', 42 ],
        '熊本県かな'   => [ 'くまもとけん', '熊本県', 'クマモトケン', 43 ],
        '大分県かな'   => [ 'おおいたけん', '大分県', 'オオイタケン', 44 ],
        '宮崎県かな'   => [ 'みやざきけん', '宮崎県', 'ミヤザキケン', 45 ],
        '鹿児島県かな' => [ 'かごしまけん', '鹿児島県', 'カゴシマケン', 46 ],
        '沖縄県かな'   => [ 'おきなわけん', '沖縄県', 'オキナワケン', 47 ],
    ]
);

test('ひらがな省略生成てすと', function( $kana, $name, $resultKana, $code ) {
    $prefecture = JapanPrefecture::makeFromKana($kana);
    $this->assertEquals($name, $prefecture->value);
    $this->assertEquals($resultKana, $prefecture->katakana());
    $this->assertEquals($code, $prefecture->code());
})->with(
    [
        '北海道かな'   => [ 'ほっかい', '北海道', 'ホッカイドウ', 1 ],
        '青森県かな'   => [ 'あおもり', '青森県', 'アオモリケン', 2 ],
        '岩手県かな'   => [ 'いわて', '岩手県', 'イワテケン', 3 ],
        '宮城県かな'   => [ 'みやぎ', '宮城県', 'ミヤギケン', 4 ],
        '秋田県かな'   => [ 'あきた', '秋田県', 'アキタケン', 5 ],
        '山形県かな'   => [ 'やまがた', '山形県', 'ヤマガタケン', 6 ],
        '福島県かな'   => [ 'ふくしま', '福島県', 'フクシマケン', 7 ],
        '茨城県かな'   => [ 'いばらき', '茨城県', 'イバラキケン', 8 ],
        '栃木県かな'   => [ 'とちぎ', '栃木県', 'トチギケン', 9 ],
        '群馬県かな'   => [ 'ぐんま', '群馬県', 'グンマケン', 10 ],
        '埼玉県かな'   => [ 'さいたま', '埼玉県', 'サイタマケン', 11 ],
        '千葉県かな'   => [ 'ちば', '千葉県', 'チバケン', 12 ],
        '東京都かな'   => [ 'とうきょう', '東京都', 'トウキョウト', 13 ],
        '神奈川県かな' => [ 'かながわ', '神奈川県', 'カナガワケン', 14 ],
        '新潟県かな'   => [ 'にいがた', '新潟県', 'ニイガタケン', 15 ],
        '富山県かな'   => [ 'とやま', '富山県', 'トヤマケン', 16 ],
        '石川県かな'   => [ 'いしかわ', '石川県', 'イシカワケン', 17 ],
        '福井県かな'   => [ 'ふくい', '福井県', 'フクイケン', 18 ],
        '山梨県かな'   => [ 'やまなし', '山梨県', 'ヤマナシケン', 19 ],
        '長野県かな'   => [ 'ながの', '長野県', 'ナガノケン', 20 ],
        '岐阜県かな'   => [ 'ぎふ', '岐阜県', 'ギフケン', 21 ],
        '静岡県かな'   => [ 'しずおか', '静岡県', 'シズオカケン', 22 ],
        '愛知県かな'   => [ 'あいち', '愛知県', 'アイチケン', 23 ],
        '三重県かな'   => [ 'みえ', '三重県', 'ミエケン', 24 ],
        '滋賀県かな'   => [ 'しが', '滋賀県', 'シガケン', 25 ],
        '京都府かな'   => [ 'きょうと', '京都府', 'キョウトフ', 26 ],
        '大阪府かな'   => [ 'おおさか', '大阪府', 'オオサカフ', 27 ],
        '兵庫県かな'   => [ 'ひょうご', '兵庫県', 'ヒョウゴケン', 28 ],
        '奈良県かな'   => [ 'なら', '奈良県', 'ナラケン', 29 ],
        '和歌山県かな' => [ 'わかやま', '和歌山県', 'ワカヤマケン', 30 ],
        '鳥取県かな'   => [ 'とっとり', '鳥取県', 'トットリケン', 31 ],
        '島根県かな'   => [ 'しまね', '島根県', 'シマネケン', 32 ],
        '岡山県かな'   => [ 'おかやま', '岡山県', 'オカヤマケン', 33 ],
        '広島県かな'   => [ 'ひろしま', '広島県', 'ヒロシマケン', 34 ],
        '山口県かな'   => [ 'やまぐち', '山口県', 'ヤマグチケン', 35 ],
        '徳島県かな'   => [ 'とくしま', '徳島県', 'トクシマケン', 36 ],
        '香川県かな'   => [ 'かがわ', '香川県', 'カガワケン', 37 ],
        '愛媛県かな'   => [ 'えひめ', '愛媛県', 'エヒメケン', 38 ],
        '高知県かな'   => [ 'こうち', '高知県', 'コウチケン', 39 ],
        '福岡県かな'   => [ 'ふくおか', '福岡県', 'フクオカケン', 40 ],
        '佐賀県かな'   => [ 'さが', '佐賀県', 'サガケン', 41 ],
        '長崎県かな'   => [ 'ながさき', '長崎県', 'ナガサキケン', 42 ],
        '熊本県かな'   => [ 'くまもと', '熊本県', 'クマモトケン', 43 ],
        '大分県かな'   => [ 'おおいた', '大分県', 'オオイタケン', 44 ],
        '宮崎県かな'   => [ 'みやざき', '宮崎県', 'ミヤザキケン', 45 ],
        '鹿児島県かな' => [ 'かごしま', '鹿児島県', 'カゴシマケン', 46 ],
        '沖縄県かな'   => [ 'おきなわ', '沖縄県', 'オキナワケン', 47 ],
    ]
);


test('総合テスト', function( string|int $name, $ans, $ansCode, $ansKana, $ansEng ) {
    $prefecture = JapanPrefecture::make($name);

    $this->assertEquals($ans, $prefecture->value);
    $this->assertEquals($ansCode, $prefecture->code());
    $this->assertEquals($ansKana, $prefecture->katakana());
    $this->assertEquals($ansEng, $prefecture->english());
})->with(
    [
        '群馬県'       => [ '群馬県', '群馬県', 10, 'グンマケン', 'GUNMA' ],
        '岡山県 省略'  => [ '岡山', '岡山県', 33, 'オカヤマケン', 'OKAYAMA' ],
        '兵庫県かな'   => [ 'ひょうご', '兵庫県', 28, 'ヒョウゴケン', 'HYOGO' ],
        '秋田県かな'   => [ 'あきたけん', '秋田県', 5, 'アキタケン', 'AKITA' ],
        '兵庫県カナ'   => [ 'ヒョウゴケン', '兵庫県', 28, 'ヒョウゴケン', 'HYOGO' ],
        '秋田県カナ'   => [ 'アキタ', '秋田県', 5, 'アキタケン', 'AKITA' ],
        '福井県'       => [ 'Fukui', '福井県', 18, 'フクイケン', 'FUKUI' ],
        '愛媛県'       => [ 'ehime-ken', '愛媛県', 38, 'エヒメケン', 'EHIME' ],
        '愛媛県コード' => [ '038', '愛媛県', 38, 'エヒメケン', 'EHIME' ],
        '宮城県かな'   => [ 4, '宮城県', 4, 'ミヤギケン', 'MIYAGI' ],

    ]
);
